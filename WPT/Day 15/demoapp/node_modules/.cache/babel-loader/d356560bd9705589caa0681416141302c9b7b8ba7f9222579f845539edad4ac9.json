{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IET\\\\Desktop\\\\PRACTICALS\\\\WPT\\\\27 Sept\\\\demoapp\\\\src\\\\ClassComponentMethodsAndLifecycle.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ClassComponentMethodsAndLifecycle extends Component {\n  constructor(props) {\n    super(props);\n    // 1. Initializing State and Binding Methods (Mounting Phase)\n    this.state = {\n      count: 0,\n      data: 'initial data'\n    };\n    this.incrementCount = this.incrementCount.bind(this);\n    console.log('1. Constructor: State initialized and methods bound.');\n  }\n\n  // --- Mounting Phase ---\n\n  static getDerivedStateFromProps(props, state) {\n    // 2. Sync State from Props (Mounting & Updating Phase)\n    if (props.externalValue !== state.externalValue) {\n      console.log('2. getDerivedStateFromProps: Syncing externalValue from props.');\n      return {\n        externalValue: props.externalValue\n      };\n    }\n    return null;\n  }\n  componentDidMount() {\n    // 4. Side Effects and Data Fetching (Mounting Phase)\n    this.timer = setInterval(() => {\n      console.log('    [LOG] Timer is running (simulating background task)');\n    }, 5000);\n\n    // Simulate an API call\n    setTimeout(() => {\n      console.log('4. componentDidMount: Simulated API call complete.');\n      this.setState({\n        data: 'Data from API'\n      });\n    }, 1500);\n    console.log('4. componentDidMount: Timer and API call initiated.');\n  }\n\n  // --- Updating Phase ---\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // 5. Performance Check (Updating Phase)\n    if (nextState.count % 2 === 0) {\n      console.log(`5. shouldComponentUpdate: Count is even (${nextState.count}). Allowing update.`);\n      return true;\n    } else {\n      console.log(`5. shouldComponentUpdate: Count is odd (${nextState.count}). Preventing update.`);\n      return false;\n    }\n  }\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    var _document$getElementB;\n    // 7. Capture Pre-DOM-Update Data (Updating Phase)\n    const snapshot = (_document$getElementB = document.getElementById('output-div')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.scrollHeight;\n    console.log('7. getSnapshotBeforeUpdate: Captured scroll height:', snapshot);\n    return snapshot;\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // 8. Post-Update Side Effects (Updating Phase)\n    if (this.state.count !== prevState.count) {\n      console.log(`8. componentDidUpdate: State updated. Previous count: ${prevState.count}`);\n    }\n    if (this.props.externalValue !== prevProps.externalValue) {\n      console.log(`8. componentDidUpdate: Props updated. New externalValue: ${this.props.externalValue}`);\n    }\n    console.log('8. componentDidUpdate: Snapshot value received:', snapshot);\n  }\n\n  // --- Unmounting Phase ---\n\n  componentWillUnmount() {\n    // 9. Cleanup (Unmounting Phase)\n    clearInterval(this.timer);\n    console.log('9. componentWillUnmount: Cleanup complete. Timer cancelled.');\n  }\n  // --- Rendering ---\n\n  render() {\n    // 3/6. Render (Mounting & Updating Phase)\n    const {\n      count,\n      data,\n      externalValue\n    } = this.state;\n    const {\n      title\n    } = this.props;\n    console.log('3/6. Render: Component rendering...');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"output-div\",\n      style: {\n        border: '2px solid purple',\n        padding: '20px',\n        margin: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ClassComponentMethodsAndLifecycle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Internal State Count: \", count, \" (Updates only on even numbers)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"External Prop Value: \", externalValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data Status: \", data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementCount,\n        children: \"Increment Internal Count (Triggers Update)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '15px',\n          color: 'gray'\n        },\n        children: \"*Check the console for method call logs.*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ClassComponentMethodsAndLifecycle","constructor","props","state","count","data","incrementCount","bind","console","log","getDerivedStateFromProps","externalValue","componentDidMount","timer","setInterval","setTimeout","setState","shouldComponentUpdate","nextProps","nextState","getSnapshotBeforeUpdate","prevProps","prevState","_document$getElementB","snapshot","document","getElementById","scrollHeight","componentDidUpdate","componentWillUnmount","clearInterval","render","title","id","style","border","padding","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","color"],"sources":["C:/Users/IET/Desktop/PRACTICALS/WPT/27 Sept/demoapp/src/ClassComponentMethodsAndLifecycle.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class ClassComponentMethodsAndLifecycle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // 1. Initializing State and Binding Methods (Mounting Phase)\r\n        this.state = {\r\n            count: 0,\r\n            data: 'initial data'\r\n        };\r\n        this.incrementCount = this.incrementCount.bind(this);\r\n        console.log('1. Constructor: State initialized and methods bound.');\r\n    }\r\n\r\n    // --- Mounting Phase ---\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        // 2. Sync State from Props (Mounting & Updating Phase)\r\n        if (props.externalValue !== state.externalValue) {\r\n            console.log('2. getDerivedStateFromProps: Syncing externalValue from props.');\r\n            return { externalValue: props.externalValue };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 4. Side Effects and Data Fetching (Mounting Phase)\r\n        this.timer = setInterval(() => {\r\n            console.log('    [LOG] Timer is running (simulating background task)');\r\n        }, 5000);\r\n        \r\n        // Simulate an API call\r\n        setTimeout(() => {\r\n            console.log('4. componentDidMount: Simulated API call complete.');\r\n            this.setState({ data: 'Data from API' });\r\n        }, 1500);\r\n\r\n        console.log('4. componentDidMount: Timer and API call initiated.');\r\n    }\r\n\r\n    // --- Updating Phase ---\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // 5. Performance Check (Updating Phase)\r\n        if (nextState.count % 2 === 0) {\r\n            console.log(`5. shouldComponentUpdate: Count is even (${nextState.count}). Allowing update.`);\r\n            return true;\r\n        } else {\r\n            console.log(`5. shouldComponentUpdate: Count is odd (${nextState.count}). Preventing update.`);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        // 7. Capture Pre-DOM-Update Data (Updating Phase)\r\n        const snapshot = document.getElementById('output-div')?.scrollHeight;\r\n        console.log('7. getSnapshotBeforeUpdate: Captured scroll height:', snapshot);\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // 8. Post-Update Side Effects (Updating Phase)\r\n        if (this.state.count !== prevState.count) {\r\n            console.log(`8. componentDidUpdate: State updated. Previous count: ${prevState.count}`);\r\n        }\r\n        if (this.props.externalValue !== prevProps.externalValue) {\r\n            console.log(`8. componentDidUpdate: Props updated. New externalValue: ${this.props.externalValue}`);\r\n        }\r\n        console.log('8. componentDidUpdate: Snapshot value received:', snapshot);\r\n    }\r\n\r\n    // --- Unmounting Phase ---\r\n\r\n    componentWillUnmount() {\r\n        // 9. Cleanup (Unmounting Phase)\r\n        clearInterval(this.timer);\r\n        console.log('9. componentWillUnmount: Cleanup complete. Timer cancelled.');\r\n    }\r\n    // --- Rendering ---\r\n\r\n    render() {\r\n        // 3/6. Render (Mounting & Updating Phase)\r\n        const { count, data, externalValue } = this.state;\r\n        const { title } = this.props;\r\n        \r\n        console.log('3/6. Render: Component rendering...');\r\n\r\n        return (\r\n            <div id=\"output-div\" style={{ border: '2px solid purple', padding: '20px', margin: '20px' }}>\r\n                <h2>ClassComponentMethodsAndLifecycle</h2>\r\n                \r\n                <p>Internal State Count: {count} (Updates only on even numbers)</p>\r\n                <p>External Prop Value: {externalValue}</p>\r\n                <p>Data Status: {data}</p>\r\n                \r\n                <button onClick={this.incrementCount}>\r\n                    Increment Internal Count (Triggers Update)\r\n                </button>\r\n                <p style={{ marginTop: '15px', color: 'gray' }}>\r\n                    *Check the console for method call logs.*\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,MAAMC,iCAAiC,SAASH,SAAS,CAAC;EACrEI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ;IACA,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE;IACV,CAAC;IACD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpDC,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;EACvE;;EAEA;;EAEA,OAAOC,wBAAwBA,CAACR,KAAK,EAAEC,KAAK,EAAE;IAC1C;IACA,IAAID,KAAK,CAACS,aAAa,KAAKR,KAAK,CAACQ,aAAa,EAAE;MAC7CH,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;MAC7E,OAAO;QAAEE,aAAa,EAAET,KAAK,CAACS;MAAc,CAAC;IACjD;IACA,OAAO,IAAI;EACf;EAEAC,iBAAiBA,CAAA,EAAG;IAChB;IACA,IAAI,CAACC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC3BN,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;IAC1E,CAAC,EAAE,IAAI,CAAC;;IAER;IACAM,UAAU,CAAC,MAAM;MACbP,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;MACjE,IAAI,CAACO,QAAQ,CAAC;QAAEX,IAAI,EAAE;MAAgB,CAAC,CAAC;IAC5C,CAAC,EAAE,IAAI,CAAC;IAERG,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;EACtE;;EAEA;;EAEAQ,qBAAqBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IACxC;IACA,IAAIA,SAAS,CAACf,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;MAC3BI,OAAO,CAACC,GAAG,CAAC,4CAA4CU,SAAS,CAACf,KAAK,qBAAqB,CAAC;MAC7F,OAAO,IAAI;IACf,CAAC,MAAM;MACHI,OAAO,CAACC,GAAG,CAAC,2CAA2CU,SAAS,CAACf,KAAK,uBAAuB,CAAC;MAC9F,OAAO,KAAK;IAChB;EACJ;EAEAgB,uBAAuBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IAAA,IAAAC,qBAAA;IAC1C;IACA,MAAMC,QAAQ,IAAAD,qBAAA,GAAGE,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,cAAAH,qBAAA,uBAArCA,qBAAA,CAAuCI,YAAY;IACpEnB,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEe,QAAQ,CAAC;IAC5E,OAAOA,QAAQ;EACnB;EAEAI,kBAAkBA,CAACP,SAAS,EAAEC,SAAS,EAAEE,QAAQ,EAAE;IAC/C;IACA,IAAI,IAAI,CAACrB,KAAK,CAACC,KAAK,KAAKkB,SAAS,CAAClB,KAAK,EAAE;MACtCI,OAAO,CAACC,GAAG,CAAC,yDAAyDa,SAAS,CAAClB,KAAK,EAAE,CAAC;IAC3F;IACA,IAAI,IAAI,CAACF,KAAK,CAACS,aAAa,KAAKU,SAAS,CAACV,aAAa,EAAE;MACtDH,OAAO,CAACC,GAAG,CAAC,4DAA4D,IAAI,CAACP,KAAK,CAACS,aAAa,EAAE,CAAC;IACvG;IACAH,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEe,QAAQ,CAAC;EAC5E;;EAEA;;EAEAK,oBAAoBA,CAAA,EAAG;IACnB;IACAC,aAAa,CAAC,IAAI,CAACjB,KAAK,CAAC;IACzBL,OAAO,CAACC,GAAG,CAAC,6DAA6D,CAAC;EAC9E;EACA;;EAEAsB,MAAMA,CAAA,EAAG;IACL;IACA,MAAM;MAAE3B,KAAK;MAAEC,IAAI;MAAEM;IAAc,CAAC,GAAG,IAAI,CAACR,KAAK;IACjD,MAAM;MAAE6B;IAAM,CAAC,GAAG,IAAI,CAAC9B,KAAK;IAE5BM,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAElD,oBACIV,OAAA;MAAKkC,EAAE,EAAC,YAAY;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,kBAAkB;QAAEC,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,gBACxFvC,OAAA;QAAAuC,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1C3C,OAAA;QAAAuC,QAAA,GAAG,wBAAsB,EAAClC,KAAK,EAAC,iCAA+B;MAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnE3C,OAAA;QAAAuC,QAAA,GAAG,uBAAqB,EAAC3B,aAAa;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C3C,OAAA;QAAAuC,QAAA,GAAG,eAAa,EAACjC,IAAI;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1B3C,OAAA;QAAQ4C,OAAO,EAAE,IAAI,CAACrC,cAAe;QAAAgC,QAAA,EAAC;MAEtC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT3C,OAAA;QAAGmC,KAAK,EAAE;UAAEU,SAAS,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAP,QAAA,EAAC;MAEhD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}